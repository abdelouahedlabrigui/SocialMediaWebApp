@page
@model SocialMediaWebApp.Pages.YouTubeSearch.YouTubeAPISearch
@{
    ViewData["Title"] = "YouTube API Search";
}

<style>
    .card-header{
        background-color: black;
        color: white;
        text-align: center;
    }
</style>

<h1>Search YouTube API</h1>
<hr>
<div class="row">
    <div class="col">
        <a class="nav-link text-dark" asp-area="" asp-page="/YouTubeSearch/YouTubeAPISearchByDateIntervals">YT Search by Date</a>
    </div>
    <div class="col">
        <a class="nav-link text-dark" asp-area="" asp-page="/YouTubeSearch/YouTubeAPISearchShorts">YT Short Search</a>
    </div>
</div>

<div class="card">
    <div class="row">   
        <div class="col-md-4">
            <div class="card-header">
                <h4>Search string</h4>
            </div>
            <div class="card-body">
                <form method="get">
                    <div class="mb-3">
                        <label for="query" class="form-label">Search Query</label>
                        <input type="text" id="query" name="query" class="form-control" value="@Model.Query" autocomplete="off" spellcheck="false"/>
                    </div>
                    <div class="mb-3">
                        <label for="maxResults" class="form-label">Max Results</label>
                        <input type="number" id="maxResults" name="maxResults" class="form-control" value="@Model.MaxResults ?? 10" />
                    </div>
                    <button type="submit" class="btn btn-primary">Search</button>
                </form>
            </div>
        </div>
        <div class="col">
            <div class="card-header">
                <h4>Search Results</h4>
            </div>
            <div class="card-body">
                @if (Model.SearchResults != null && Model.SearchResults.Any())
                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Video Id</th>
                                <th>Title</th>
                                <th>Description</th>
                                <th>Published At</th>
                                <th>Channel Title</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var result in Model.SearchResults)
                            {
                                <tr>
                                    <td>@result.VideoId</td>
                                    <td>@result.Title</td>
                                    <td>@result.Description</td>
                                    <td>@result.PublishedAt</td>
                                    <td>@result.ChannelTitle</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p>No search results found or unable to fetch data.</p>
                }

                @if (!ModelState.IsValid)
                {
                    <div class="alert alert-danger">
                        @foreach (var error in ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <p>@error.ErrorMessage</p>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>